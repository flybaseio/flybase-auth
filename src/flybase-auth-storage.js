// flybaseauth-storage local storage handler...
(function(){if(typeof angular!=='undefined'){angular.module('flybaseauth-storage',['flybaseauth-storage.store']);angular.module('flybaseauth-storage.cookieStorage',[]).service('cookieStorage',["$injector",function($injector){var $cookieStore=$injector.get('$cookieStore');this.set=function(what,value){return $cookieStore.put(what,value);};this.get=function(what){return $cookieStore.get(what);};this.remove=function(what){return $cookieStore.remove(what);};}]);angular.module('flybaseauth-storage.internalStore',['flybaseauth-storage.localStorage','flybaseauth-storage.sessionStorage']).factory('InternalStore',["$log","$injector",function($log,$injector){function InternalStore(namespace,storage,delimiter){this.namespace=namespace||null;this.delimiter=delimiter||'.';this.inMemoryCache={};this.storage=$injector.get(storage||'localStorage');}
InternalStore.prototype.getNamespacedKey=function(key){if(!this.namespace){return key;}else{return[this.namespace,key].join(this.delimiter);}};InternalStore.prototype.set=function(name,elem){this.inMemoryCache[name]=elem;this.storage.set(this.getNamespacedKey(name),JSON.stringify(elem));};InternalStore.prototype.get=function(name){var obj=null;if(name in this.inMemoryCache){return this.inMemoryCache[name];}
var saved=this.storage.get(this.getNamespacedKey(name));try{if(typeof saved==='undefined'||saved==='undefined'){obj=undefined;}else{obj=JSON.parse(saved);}
this.inMemoryCache[name]=obj;}catch(e){$log.error('Error parsing saved value',e);this.remove(name);}
return obj;};InternalStore.prototype.remove=function(name){this.inMemoryCache[name]=null;this.storage.remove(this.getNamespacedKey(name));};return InternalStore;}]);angular.module('flybaseauth-storage.localStorage',['flybaseauth-storage.cookieStorage']).service('localStorage',["$window","$injector",function($window,$injector){var localStorageAvailable;try{$window.localStorage.setItem('testKey','test');$window.localStorage.removeItem('testKey');localStorageAvailable=true;}catch(e){localStorageAvailable=false;}
if(localStorageAvailable){this.set=function(what,value){return $window.localStorage.setItem(what,value);};this.get=function(what){return $window.localStorage.getItem(what);};this.remove=function(what){return $window.localStorage.removeItem(what);};}else{var cookieStorage=$injector.get('cookieStorage');this.set=cookieStorage.set;this.get=cookieStorage.get;this.remove=cookieStorage.remove;}}]);angular.module('flybaseauth-storage.sessionStorage',['flybaseauth-storage.cookieStorage']).service('sessionStorage',["$window","$injector",function($window,$injector){var sessionStorageAvailable;try{$window.sessionStorage.setItem('testKey','test');$window.sessionStorage.removeItem('testKey');sessionStorageAvailable=true;}catch(e){sessionStorageAvailable=false;}
if(sessionStorageAvailable){this.set=function(what,value){return $window.sessionStorage.setItem(what,value);};this.get=function(what){return $window.sessionStorage.getItem(what);};this.remove=function(what){return $window.sessionStorage.removeItem(what);};}else{var cookieStorage=$injector.get('cookieStorage');this.set=cookieStorage.set;this.get=cookieStorage.get;this.remove=cookieStorage.remove;}}]);angular.module('flybaseauth-storage.store',['flybaseauth-storage.internalStore']).provider('store',function(){var _storage='localStorage';this.setStore=function(storage){if(storage&&angular.isString(storage)){_storage=storage;}};this.$get=["InternalStore",function(InternalStore){var store=new InternalStore(null,_storage);store.getNamespacedStore=function(namespace,storage,key){return new InternalStore(namespace,storage,key);};return store;}];});}}());